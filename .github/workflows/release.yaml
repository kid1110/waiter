name: build release file

on:
  release:
    types: [ released ]

env:
  APP_NAME: Waiter

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Build
        run: |
          flutter config --enable-windows-desktop
          flutter build windows --build-name=$GITHUB_REF_NAME --build-number=$GITHUB_RUN_NUMBER
          Compress-Archive -Path .\build\windows\x64\runner\Release\* -DestinationPath ${{ env.APP_NAME }}-windows-${{ github.ref_name }}.zip

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{ env.APP_NAME }}-windows-${{ github.ref_name }}.zip

      - uses: actions/upload-artifact@v4
        with:
          name: windows
          path: ${{ env.APP_NAME }}-windows-${{ github.ref_name }}.zip

  build-web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Build
        run: |
          flutter pub get
          flutter build web --build-name=$GITHUB_REF_NAME --build-number=$GITHUB_RUN_NUMBER
          tar -zcvf ${{ env.APP_NAME }}-web-${{ github.ref_name }}.tar.gz ./build/web/*

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{ env.APP_NAME }}-web-${{ github.ref_name }}.tar.gz

      - uses: actions/upload-artifact@v4
        with:
          name: web
          path: ${{ env.APP_NAME }}-web-${{ github.ref_name }}.tar.gz

  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Build
        run: |
          flutter pub get
          flutter build apk --build-name=$GITHUB_REF_NAME --build-number=$GITHUB_RUN_NUMBER
          mv ./build/app/outputs/flutter-apk/app-release.apk ${{ env.APP_NAME }}-${{ github.ref_name }}.apk
          mv ./build/app/outputs/flutter-apk/app-release.apk.sha1 ${{ env.APP_NAME }}-${{ github.ref_name }}.apk.sha1

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{ env.APP_NAME }}-${{ github.ref_name }}.apk
            ${{ env.APP_NAME }}-${{ github.ref_name }}.apk.sha1

      - uses: actions/upload-artifact@v4
        with:
          name: android
          path: ${{ env.APP_NAME }}-${{ github.ref_name }}.apk

  build-docker:
    runs-on: ubuntu-latest
    needs: [build-windows, build-web, build-android]
    steps:
      - name: Set env
        run: |
          echo "WIN_FILE_NAME=${{ env.APP_NAME }}-windows-${{ github.ref_name }}.zip" >> $GITHUB_ENV
          echo "WEB_FILE_NAME=${{ env.APP_NAME }}-web-${{ github.ref_name }}.tar.gz" >> $GITHUB_ENV
          echo "AND_FILE_NAME=${{ env.APP_NAME }}-${{ github.ref_name }}.apk" >> $GITHUB_ENV

      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      - name: Display structure of downloaded files
        run: ls -R
      - uses: actions/download-artifact@v4
        with:
          name: windows
      - uses: actions/download-artifact@v4
        with:
          name: web
      - uses: actions/download-artifact@v4
        with:
          name: android

      - name: Display structure of downloaded files
        run: ls -R
      - name: Extract web file
        run: tar -zxvf $WEB_FILE_NAME -C ./docker/web
      - name: Move other files
        run: |
          mv $WIN_FILE_NAME ./docker/$WIN_FILE_NAME
          mv $AND_FILE_NAME ./docker/$AND_FILE_NAME

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./docker
          file: ./docker/Dockerfile
          push: true
          tags: $GITHUB_REPOSITORY:${{ github.ref_name }}
          build-args: |
            WEB_FILE=web/*
            WIN_FILE_NAME=$WIN_FILE_NAME
            AND_FILE_NAME=$AND_FILE_NAME